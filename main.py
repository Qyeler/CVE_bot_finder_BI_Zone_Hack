import telebot
from telebot import types
import back_bot
from data.data_base import db_session
from functions import *

bot = telebot.TeleBot("6011527798:AAEHTIIZUgoEi6lOc9hDW_pF1G1rLVAfKds")
users = {}
db_session.global_init("./data/data_base.db")
session = db_session.create_session()

@bot.message_handler(func=lambda message: message.text == '/exit')
def exit(message):
    users[message.chat.id]["place"] = "none"
    start_message(message)
@bot.message_handler(func=lambda message: message.text == 'üîç –ü–æ–∏—Å–∫ –ø–æ –Ω–æ–º–µ—Ä—É CVE')
def search_CVE_by_number(message):
    users[message.chat.id]["place"] = "CVE_search_menu"
    if not "number_CVE" in users[message.chat.id]:
        markupRemove = types.ReplyKeyboardRemove()
        sent_message = bot.send_message(message.chat.id,
                                        'üì•üí¨–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä CVE\n–í —Ñ–æ—Ä–º–∞—Ç–µ "CVE-2023-31702"',reply_markup=markupRemove)
        users[message.chat.id]["number_CVE"]="0"
        return
    else:
        _=back_bot.webAppKeyboard(message.text)
        if _[0]==0:
            sent_message = bot.send_message(message.chat.id,
                                            '–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
        else:
            sent_message = bot.send_message(message.chat.id,
                                        '–û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å –≤ –±–¥...',reply_markup=_[1])

        users[message.chat.id].pop("number_CVE",None)
        users[message.chat.id]["place"]="none"

@bot.message_handler(func=lambda message: message.text == 'üîç –ü–æ–∏—Å–∫ –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º')
def search_params_menu(message):
    if message.text=="üîç –ü–æ–∏—Å–∫ –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º" and "bd_search" in users[message.chat.id]:
        users[message.chat.id].pop("bd_search", None)
        users[message.chat.id].pop("cond", None)
        sent_message = bot.send_message(message.chat.id,
                                        '–£–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥–∏–¥—É—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤\n')
    markupRemove = types.ReplyKeyboardRemove()
    users[message.chat.id]["place"]= "find_menu"
    if not "cond" in users[message.chat.id]:
        users[message.chat.id]["cond"] = "product"
        sent_message = bot.send_message(message.chat.id,
                                        'üìù–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ –∏–ª–∏ –≤–µ–Ω–¥–æ—Ä–∞\n –ù–∞–ø—Ä–∏–º–µ—Ä:\n"macOS"\n"Firefox"\n"Ethernet Controllers"\n–ë–µ–∑ –∫–∞–≤—ã—á–µ–∫\n –í–≤–æ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∞–∫ —á—Ç–æ–±—ã –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–µ –±—ã–ª–æ –±–æ–ª—à–∏–º, –∏–Ω–∞—á–µ –º—ã –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ–±—Ä–∞–±–æ—Ç–∞–µ–º –∑–∞–ø—Ä–æ—Å\n‚û°Ô∏èüö™ –î–ª—è –≤—ã—Ö–æ–¥–∞ –≤–≤–µ–¥–∏—Ç–µ /exit',reply_markup=markupRemove)
        return

    match users[message.chat.id]["cond"]:
        case "product":
            users[message.chat.id]["cond"] = "version"
            users[message.chat.id]["bd_search"]={}
            users[message.chat.id]["bd_search"]["product"]=message.text
            sent_message = bot.send_message(message.chat.id,
                                            'üìù–í–≤–µ–¥–∏—Ç–µ –≤–µ—Ä—Å–∏—é –ø—Ä–æ–¥—É–∫—Ç–∞ \n –ù–∞–ø—Ä–∏–º–µ—Ä:\n" 2019.010.20100"\n"72.0.3626.121"\n"66.0.2"\n–ë–µ–∑ –∫–∞–≤—ã—á–µ–∫\n –ï—Å–ª–∏ –í–µ—Ä—Å–∏–∏ –Ω–µ—Ç—É –Ω–∞–ø–∏—à–∏—Ç–µ -',reply_markup=markupRemove)
        case "version":
            users[message.chat.id]["bd_search"]["version"] = message.text
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            itembtn1 = types.KeyboardButton('–ü–æ–∏—Å–∫')
            itembtn2 = types.KeyboardButton('–û—Ç–º–µ–Ω–∞')
            markup.add(itembtn1, itembtn2)
            sent_message = bot.send_message(message.chat.id,'–ú—ã –≥–æ—Ç–æ–≤—ã –∫ –ø–æ–∏—Å–∫—É',reply_markup=markup)
            users[message.chat.id]["cond"] = "req"
        case "req":
            if message.text=="–ü–æ–∏—Å–∫":
                parametrs= None
                ans = back_bot.CVE_profuct_find(users[message.chat.id]["bd_search"]["product"]+users[message.chat.id]["bd_search"]["version"], parametrs)
                if len(ans)==0:
                    sent_message = bot.send_message(message.chat.id,"üôÉ–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")
                    users[message.chat.id].pop("bd_search", None)
                    users[message.chat.id].pop("cond", None)
                    return
                for i in ans:
                    markup=back_bot.Get_inline_marrkup(f"CVE-{i[0]}")[1]
                    if users[message.chat.id]["lang"]=="eu":
                        sent_message = bot.send_message(message.chat.id, f"üí¢CVE –ù–æ–º–µ—Ä:{i[0]}\n\n‚ÑπÔ∏è–û–ø–∏—Å–∞–Ω–∏–µ CVE:{i[1]}",
                                                        reply_markup=markup)
                    else:
                        sent_message = bot.send_message(message.chat.id, f"üí¢CVE –ù–æ–º–µ—Ä:{i[0]}\n\n‚ÑπÔ∏è–û–ø–∏—Å–∞–Ω–∏–µ CVE:{back_bot.translate(i[1])}",
                                                        reply_markup=markup)

                users[message.chat.id]["place"] = "sort_menu"
                itembtn1 = types.KeyboardButton('üîç –£—Ä–æ–≤–µ–Ω—å –∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç–∏')
                itembtn2 = types.KeyboardButton('üîç CVSS —Ä–µ–π—Ç–∏–Ω–≥')
                itembtn3 = types.KeyboardButton('üîç –ú–µ—Ç—Ä–∏–∫–∏ CVSS')
                itembtn4 = types.KeyboardButton('üîç EPSS —Ä–µ–π—Ç–∏–Ω–≥')
                itembtn5 = types.KeyboardButton('üîç –î–∞—Ç–∞/–≤—Ä–µ–º—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ CVE')
                itembtn6 = types.KeyboardButton('üîç –ü—Ä–∏—Å—É—Ç—Å–≤–∏–µ PoC/CVE WriteUp')
                itembtn7 = types.KeyboardButton('üßê –í—ã–ø–æ–ª–Ω–∏—Ç—å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É')
                itembtn8 = types.KeyboardButton('üîô –í—ã—Ö–æ–¥ –∏–∑ –ø–æ–∏—Å–∫–∞ CVE')
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                markup.add(itembtn1, itembtn2, itembtn3, itembtn4, itembtn5, itembtn6, itembtn7, itembtn8)
                sent_message = bot.send_message(message.chat.id,
                                                '–ú—ã –º–æ–∂–µ–º –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ —ç—Ç–∏–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:\n'
                                                'üîç –£—Ä–æ–≤–µ–Ω—å –∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç–∏\n'
                                                'üîç CVSS —Ä–µ–π—Ç–∏–Ω–≥\n'
                                                'üîç –ú–µ—Ç—Ä–∏–∫–∏ CVSS\n'
                                                'üîç EPSS —Ä–µ–π—Ç–∏–Ω–≥\n'
                                                'üîç –î–∞—Ç–∞/–≤—Ä–µ–º—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ CVE\n'
                                                'üîç –ü—Ä–∏—Å—É—Ç—Å–≤–∏–µ PoC/CVE WriteUp\n', reply_markup=markup)
            else:
                users[message.chat.id].pop("bd_search", None)
                users[message.chat.id].pop("cond", None)



def find_CVE_parametr(name,version,parametrs):
    if parametrs is None:
        print("no parms")
    else:
        print(name,version,parametrs)

def user_set_parametr_to_sort(message):
    users[message.chat.id]["place"] = "sort_menu"
    if not "sort_parametrs" in users[message.chat.id]:
        users[message.chat.id]["sort_parametrs"]={}
    if "waiting_ans" in users[message.chat.id]:
        users[message.chat.id]["sort_parametrs"][users[message.chat.id]["waiting_ans"]]=message.text
        users[message.chat.id].pop("waiting_ans")
        message.text="_"
    markupRemove = types.ReplyKeyboardRemove()
    match message.text:
        case 'üîç –£—Ä–æ–≤–µ–Ω—å –∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç–∏':
            sent_message = bot.send_message(message.chat.id,'–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –æ—Ç 1 –¥–æ 10\n –ù–∞–ø—Ä–∏–º–µ—Ä:\n"4-7"',reply_markup=markupRemove)
            users[message.chat.id]["waiting_ans"]="critic_lvl"
        case 'üîç CVSS —Ä–µ–π—Ç–∏–Ω–≥':
            sent_message = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –æ—Ç 1 –¥–æ 10\n –ù–∞–ø—Ä–∏–º–µ—Ä:\n"2-4"',reply_markup=markupRemove)
            users[message.chat.id]["waiting_ans"] = "CVSS_rating"
            print("2")
        case 'üîç –ú–µ—Ç—Ä–∏–∫–∏ CVSS':
            sent_message = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ç—Ä–∏–∫, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —É—á–∏—Ç—ã–≤–∞—Ç—å –ø—Ä–∏ –ø–æ–∏—Å–∫–µ\n –ù–∞–ø—Ä–∏–º–µ—Ä:\n"Network"\n"Adjacent Network"\n"Local"\n–ë–µ–∑ –∫–∞–≤—ã—á–µ–∫',reply_markup=markupRemove)
            users[message.chat.id]["waiting_ans"] = "metric_CVSS"
            print("3")
        case 'üîç EPSS —Ä–µ–π—Ç–∏–Ω–≥':
            sent_message = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –æ—Ç 1 –¥–æ 10\n –ù–∞–ø—Ä–∏–º–µ—Ä:\n"4-7"',reply_markup=markupRemove)
            users[message.chat.id]["waiting_ans"] = "EPSS_rating"
        case 'üîç –î–∞—Ç–∞/–≤—Ä–µ–º—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ CVE':
            sent_message = bot.send_message(message.chat.id,
                                            '–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î:–ú–ú:–ì–ì-–î–î:–ú–ú:–ì–ì\n –ù–∞–ø—Ä–∏–º–µ—Ä:\n"16:02:23"\n"26:05:23"\n–ë–µ–∑ –∫–∞–≤—ã—á–µ–∫',reply_markup=markupRemove)
            users[message.chat.id]["waiting_ans"] = "date_CVE"
        case 'üîç –ü—Ä–∏—Å—É—Ç—Å–≤–∏–µ PoC/CVE WriteUp':
            sent_message = bot.send_message(message.chat.id,
                                            '–í–≤–µ–¥–∏—Ç–µ on/off —á—Ç–æ–±—ã –≤—Å–µ –æ—Ç–≤–µ—Ç—ã —Å–æ–¥–µ—Ä–∂–∞–ª–∏ CVE WriteUp –∏ PoC\n –ù–∞–ø—Ä–∏–º–µ—Ä:\n"on"\n"off\n–ë–µ–∑ –∫–∞–≤—ã—á–µ–∫',reply_markup=markupRemove)
            users[message.chat.id]["waiting_ans"] = "PoC/CVE_writeUp"
        case 'üßê –í—ã–ø–æ–ª–Ω–∏—Ç—å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É':
            find_CVE_parametr(users[message.chat.id]["bd_search"]["product"],users[message.chat.id]["bd_search"]["version"],users[message.chat.id]["sort_parametrs"])
        case 'üîô –í—ã—Ö–æ–¥ –∏–∑ –ø–æ–∏—Å–∫–∞ CVE':
            users[message.chat.id]["place"]="none"
            echo_message(message)
        case _:
            itembtn1 = types.KeyboardButton('üîç –£—Ä–æ–≤–µ–Ω—å –∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç–∏')
            itembtn2 = types.KeyboardButton('üîç CVSS —Ä–µ–π—Ç–∏–Ω–≥')
            itembtn3 = types.KeyboardButton('üîç –ú–µ—Ç—Ä–∏–∫–∏ CVSS')
            itembtn4 = types.KeyboardButton('üîç EPSS —Ä–µ–π—Ç–∏–Ω–≥')
            itembtn5 = types.KeyboardButton('üîç –î–∞—Ç–∞/–≤—Ä–µ–º—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ CVE')
            itembtn6 = types.KeyboardButton('üîç –ü—Ä–∏—Å—É—Ç—Å–≤–∏–µ PoC/CVE WriteUp')
            itembtn7 = types.KeyboardButton('üßê –í—ã–ø–æ–ª–Ω–∏—Ç—å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É')
            itembtn8 = types.KeyboardButton('üîô –í—ã—Ö–æ–¥ –∏–∑ –ø–æ–∏—Å–∫–∞ CVE')
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add(itembtn1, itembtn2, itembtn3,itembtn4,itembtn5,itembtn6,itembtn7,itembtn8)
            sent_message = bot.send_message(message.chat.id,
                                            '–ú—ã –º–æ–∂–µ–º –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ —ç—Ç–∏–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:\n'
                                            'üîç –£—Ä–æ–≤–µ–Ω—å –∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç–∏\n'
                                            'üîç CVSS —Ä–µ–π—Ç–∏–Ω–≥\n'
                                            'üîç –ú–µ—Ç—Ä–∏–∫–∏ CVSS\n'
                                            'üîç EPSS —Ä–µ–π—Ç–∏–Ω–≥\n'
                                            'üîç –î–∞—Ç–∞/–≤—Ä–µ–º—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ CVE\n'
                                            'üîç –ü—Ä–∏—Å—É—Ç—Å–≤–∏–µ PoC/CVE WriteUp\n',reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == 'üì© –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π')
def notifications_menu(message):
    users[message.chat.id]["place"] = "notice_menu"
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    itembtn1 = types.KeyboardButton('üì• –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è')
    itembtn2 = types.KeyboardButton('üì§ –û—Ç–ø–∏—Å–∞—Ç—å—Å—è')
    itembtn3 = types.KeyboardButton('üõ†Ô∏è –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è')
    itembtn4 = types.KeyboardButton('üõ†Ô∏è –í—ã–π—Ç–∏ –∏–∑ –º–µ–Ω—é')
    markup.add(itembtn1, itembtn2, itembtn3,itembtn4)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å:", reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == 'üõ†Ô∏è –í—ã–π—Ç–∏ –∏–∑ –º–µ–Ω—é')
def back(message):
    users[message.chat.id]["place"]="none"
    start_message(message)

@bot.message_handler(func=lambda message: message.text == 'üì• –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è')
def hello_sub(message):
    bot.send_message(message.chat.id, "–í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã")

@bot.message_handler(func=lambda message: message.text == 'üì§ –û—Ç–ø–∏—Å–∞—Ç—å—Å—è')
def bay_sub(message):
    bot.send_message(message.chat.id, "–í—ã –æ—Ç–ø–∏—Å–∞–Ω—ã")

@bot.message_handler(func=lambda message: message.text == 'üõ†Ô∏è –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è')
def configure_notifications_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    itembtn1 = types.KeyboardButton('üî¢ –†–µ–≥—É–ª—è—Ä–Ω–æ—Å—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π')
    itembtn2 = types.KeyboardButton('üö® –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ —É—Ä–æ–≤–Ω—è–º')
    itembtn3 = types.KeyboardButton('üåü –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ —Ä–µ–π—Ç–∏–Ω–≥–∞–º')
    markup.add(itembtn1, itembtn2, itembtn3)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏, –∫–∞–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ç–µ–±–µ –Ω—É–∂–Ω—ã, –∏–ª–∏ –≤—ã–±–µ—Ä–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—É–Ω–∫—Ç—ã:",
                     reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == 'üî¢ –†–µ–≥—É–ª—è—Ä–Ω–æ—Å—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π')
def notification_frequency_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    itembtn1 = types.KeyboardButton('üïí –ö–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç')
    itembtn2 = types.KeyboardButton('üïï –ö–∞–∂–¥—ã–π —á–∞—Å')
    itembtn3 = types.KeyboardButton('üóìÔ∏è –ö–∞–∂–¥—ã–π –¥–µ–Ω—å')
    markup.add(itembtn1, itembtn2, itembtn3)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏, —Å –∫–∞–∫–æ–π —Ä–µ–≥—É–ª—è—Ä–Ω–æ—Å—Ç—å—é —Ç—ã —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:",
                     reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == 'üö® –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ —É—Ä–æ–≤–Ω—è–º')
def notification_severity_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    itembtn1 = types.KeyboardButton('üî¥ Critical')
    itembtn2 = types.KeyboardButton('üü† High')
    itembtn3 = types.KeyboardButton('üü° Medium')
    itembtn4 = types.KeyboardButton('üü¢ Low')
    itembtn5 = types.KeyboardButton('üîµ None')
    itembtn5 = types.KeyboardButton('üîµ –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π')
    markup.add(itembtn1, itembtn2, itembtn3, itembtn4, itembtn5)
    if users[message.chat.id]["place"]!="notice_lvl_menu":
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏, –ø–æ –∫–∞–∫–∏–º —É—Ä–æ–≤–Ω—è–º —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π —Ç—ã —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, —á—Ç–æ–±—ã –æ—Ç–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ–¥–Ω–æ–π –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–∞–∂–º–∏—Ç–µ –µ–µ –µ—â–µ —Ä–∞–∑:",
                        reply_markup=markup)
    users[message.chat.id]["place"]="notice_lvl_menu"
@bot.message_handler(func=lambda message: message.text == 'üîµ –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π')
def back_menu(message):
    users[message.chat.id]["place"]="none"
    echo_message(message)

@bot.message_handler(func=lambda
        message: message.text == 'üî¥ Critical' or message.text == 'üü† High' or message.text == 'üü° Medium' or message.text == 'üü¢ Low' or message.text == 'üîµ None')
def back(message):
    bot.send_message(message.chat.id,
                     f"–¢—ã –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö —É—è–∑–≤–∏–º–æ—Å—Ç—è—Ö —Å —É—Ä–æ–≤–Ω–µ–º –∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç–∏ {message.text}.")
    notification_severity_menu(message)


@bot.message_handler(func=lambda message: message.text == 'üåü –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ —Ä–µ–π—Ç–∏–Ω–≥–∞–º')
def notification_cvss_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    itembtn1 = types.KeyboardButton('‚≠ê 9.0 - 10.0')
    itembtn2 = types.KeyboardButton('üåü 7.0 - 8.9')
    itembtn3 = types.KeyboardButton('‚ú® 4.0 - 6.9')
    itembtn4 = types.KeyboardButton('üí´ 0.1 - 3.9')
    itembtn5 = types.KeyboardButton('üîµ –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π')
    markup.add(itembtn1, itembtn2, itembtn3, itembtn4,itembtn5)
    if users[message.chat.id]["place"]!="notice_rating_menu":
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏, –ø–æ –∫–∞–∫–∏–º —É—Ä–æ–≤–Ω—è–º —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π —Ç—ã —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, —á—Ç–æ–±—ã –æ—Ç–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ–¥–Ω–æ–π –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–∞–∂–º–∏—Ç–µ –µ–µ –µ—â–µ —Ä–∞–∑:",
                        reply_markup=markup)
    users[message.chat.id]["place"]="notice_rating_menu"



@bot.message_handler(func=lambda
        message: message.text == '‚≠ê 9.0 - 10.0' or message.text == 'üåü 7.0 - 8.9' or message.text == '‚ú® 4.0 - 6.9' or message.text == 'üí´ 0.1 - 3.9')
def rating_notifications(message):
    bot.send_message(message.chat.id, f"–í–∞—à –æ—Ç–≤–µ—Ç –ø—Ä–∏–Ω—è—Ç. {message.text}")

@bot.message_handler(func=lambda message: True)
def echo_message(message):
    try:
        if  not message.chat.id in users:
            start_message(message)
            return
        if message.text=="ru":
            users[message.chat.id]["lang"]="ru"
            start_message(message)
            return
        if message.text=="eu":
            users[message.chat.id]["lang"]="eu"
            start_message(message)
            return
        else:
            match users[message.chat.id]["place"]:
                case "find_menu":
                    search_params_menu(message)
                    return
                case "sort_menu":
                    user_set_parametr_to_sort(message)
                case "CVE_search_menu":
                    search_CVE_by_number(message)
                case "notice_menu":
                    notifications_menu(message)
                case "notice_lvl_menu":
                    notification_severity_menu(message)
                case "notice_rating_menu":
                    notification_cvss_menu(message)
                case _:
                    start_message(message)
    except:
        print("error\n")
@bot.message_handler(commands=['/start'])
def start_message(message):
    if not message.chat.id in users:
        users[message.chat.id]={}
        users[message.chat.id]["place"] = "none"
        users[message.chat.id]["lang"] = "eu"
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    itembtn1 = types.KeyboardButton('üîç –ü–æ–∏—Å–∫ –ø–æ –Ω–æ–º–µ—Ä—É CVE')
    itembtn2 = types.KeyboardButton('üîç –ü–æ–∏—Å–∫ –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º')
    itembtn3 = types.KeyboardButton('üì© –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π')
    markup.add(itembtn1, itembtn2, itembtn3)
    bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —É—è–∑–≤–∏–º–æ—Å—Ç—è—Ö. –í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ\n–ß—Ç–æ–±—ã –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —è–∑—ã–∫ –Ω–∞–ø–∏—à–∏—Ç–µ eu –∏–ª–∏ ru\n–°–µ–π—á–∞—Å {users[message.chat.id]['lang']}:",
                     reply_markup=markup)


if __name__ == '__main__':
    bot.polling()
